[build-system]
requires = ["setuptools>=65", "wheel", "setuptools_scm[toml]>=7"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
license = {text = "{{ cookiecutter.open_source_license }}"}
authors = [
    {name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: {{ cookiecutter.python_version }}",
]

dependencies = [
    "click>=8.0",
    "pydantic>=2.0",
    "python-dotenv>=0.19.0",
    "rich>=13.0",
    "httpx>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4.1",
    "pytest-asyncio>=0.21",
    "pytest-mock>=3.11",
    "pytest-xdist>=3.3",
    "black>=23.7",
    "isort>=5.12",
    "mypy>=1.5",
    "flake8>=6.1",
    "pre-commit>=3.3",
    "tox>=4.6",
    "ipython>=8.14",
    "ipdb>=0.13",
]

docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=1.3",
    "sphinx-autodoc-typehints>=1.24",
    "sphinx-copybutton>=0.5",
    "myst-parser>=2.0",
    "nbsphinx>=0.9",
    "sphinxcontrib-mermaid>=0.9",
]

ai = [
    "openai>=1.0",
    "anthropic>=0.7",
    "google-generativeai>=0.3",
    "tiktoken>=0.5",
    "tenacity>=8.2",
]

all = [
    "{{ cookiecutter.project_slug }}[dev,docs,ai]",
]

[project.urls]
Homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.github_repository }}"
Documentation = "https://{{ cookiecutter.github_repository }}.readthedocs.io"
Repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.github_repository }}.git"
Issues = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.github_repository }}/issues"
Changelog = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.github_repository }}/blob/main/CHANGELOG.md"

[project.scripts]
{{ cookiecutter.module_name }} = "{{ cookiecutter.module_name }}.__main__:main"
generate-docs = "scripts.generate_docs:main"
generate-tests = "scripts.generate_tests:main"
auto-generate = "scripts.auto_generate_all:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["{{ cookiecutter.module_name }}*", "scripts*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.json", "*.txt", "*.md"]

# Testing configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--cov={{ cookiecutter.module_name }}",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-branch",
    "--cov-fail-under={{ cookiecutter.min_coverage_percentage }}",
    "-vv",
    "--tb=short",
    "--maxfail=1",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ai: marks tests that require AI API access",
]

[tool.coverage.run]
source = ["src"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
]
precision = 2
show_missing = true

# Code quality tools
[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  | __pycache__
  | \.git
  | \.tox
  | \.venv
  | build
  | dist
  | docs
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
show_error_codes = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".tox",
    ".eggs",
]
per-file-ignores = [
    "__init__.py:F401",
]